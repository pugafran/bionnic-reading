La idea de la computación en malla parte de una analogía entre los computadores y las centrales generadoras de energía eléctrica. El suministro de energía se organiza en una red o malla a la que se conectan las diferentes centrales eléctricas, que generan la energía, y también las fábricas y domicilios particulares que la consumen. Alguna de estas fábricas o domicilios puede a su vez ser generador de energía (por ejemplo viviendas que tengan instados paneles solares), y contribuyen por tanto en inyectar energía a esa malla que pueda ser consumida en otra parte. La idea del grid computing es algo similar. Los computadores pueden verse como recursos capaces de ofrecer capacidad de cómputo, a la vez que habrá otros que sean clientes que necesiten realizar complejos cálculos que demanden mucha capacidad de cómputo. Se trata de organizar todo ese parque de millones de computadores que muchas veces están ociosos para que contribuyan con su capacidad de cómputo a las necesidades de cómputo que pueda existir en otra parte. Por ejemplo, instituciones de investigación de astronomía, física, meteorología, medicina, etc. a menudo tienen grandes necesidades computacionales y tradicionalmente las resolvían mediante la compra o alquiler de grandes supercomputadores. La computación en malla vendría a mejorar la situación al permitir que varias de estas instituciones colaboren “cediéndose” capacidad de cómputo cuando no la necesitan, o usando incluso la de los ordenadores de sobremesa de los voluntarios que quieran colaborar. Evidentemente la coordinación de esos computadores requerirá de un software intermedio que gestione cuáles de ellos forman parte de la malla, qué capacidad de cómputo pueden ofrecer, si están libres u ocupados, etc. Este software intermedio sería un middleware grid, y a día de hoy existen muchas implementaciones (por ejemplo Globus, BOINC) Sobre este middleware grid es posible construir aplicaciones grid que son las que finalmente implementen la solución a un problema dado que requiera gran capacidad de cómputo. Por ejemplo, sobre el middleware BOINC se desarrolla todo un conjunto de aplicaciones grid de computación voluntaria, tales como SETI@home para la búsqueda de señales inteligentes procedentes del espacio exterior, lo que requiere ejecutar complejos algoritmos sobre las señales registradas por los radio-telescopios, LHC@home (también llamado Sixtrack) que colabora con el CERN en el análisis de los resultados obtenidos de su acelerador de partículas, Rosetta@home que ejecuta algoritmos que determinan los posibles plegados tridimensionales de las complejas moléculas de proteínas, con aplicaciones en biología, medicina y farmacología, y muchos más.